# Configures the development/test environment for the Verifier.

project=verifier

build_context dock
dockerfile dock/Development-Dockerfile
privileged true # Need extended privileges to run Docker daemon in container
pull_latest true

# Whether or not we're running in a CI context
ci() {
  [ -n "${CI+x}" ] && [ "${CI}" -eq 1 ]
}

# Ensure the container runs as the current user, otherwise the files in the git
# repo may have their ownership changed to root
env_var APP_UID $(user_id)
env_var APP_GID $(group_id)

# Configuration for uploading artifacts to Nexus
env_var NEXUS_GROUP $project
optional_env_var NEXUS_USER
optional_env_var NEXUS_PASSWORD

# Allow user to deploy an Docker image tag that has already been pushed
optional_env_var DEPLOY_TAG

# Used by Jenkins jobs to unlock Arcanus chest during deployment
optional_env_var ARCANUS_PASSWORD

# Shared amongst all Verifier-related builds to coordinate artifact uploading.
volume "${project}_tmp:/tmp"
volume "${project}_cache:/home/app/.cache"

# Expose Docker Hub credentials if they exist
if [ -d "$HOME/.docker" ]; then
  volume "$HOME/.docker:/home/app/.docker"
fi

if ! ci; then
  publish 3000:3000 # Gunicorn
  publish 9200:9200 # Elasticsearch HTTP
  publish 9300:9300 # Elasticsearch Transport
fi

# If no command is specified, start a running instance in a container
default_command dock/start-everything

# vi: ft=sh
